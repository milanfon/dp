% Programatická řešení

@inproceedings{FeedbackDirectedRT,
  title={Feedback-Directed Random Test Generation},
  author={Carlos Pacheco and Shuvendu K. Lahiri and Michael D. Ernst and Thomas Ball},
  booktitle={ICSE '07},
  year={2007},
  organization={IEEE Computer Society},
  address={Washington, DC, USA},
  url={https://homes.cs.washington.edu/~mernst/pubs/feedback-testgen-icse2007.pdf},
}

@online{IntelliTestInputGeneration2023,
  author = {{Microsoft}},
  title = {Dynamic symbolic execution - Visual Studio (Windows)},
  year = {2023},
  month = {March},
  day = {10},
  url = {https://learn.microsoft.com/en-us/visualstudio/test/intellitest-manual/input-generation?view=vs-2022},
  url = "\url{https://learn.microsoft.com/en-us/visualstudio/test/intellitest-manual/input-generation?view=vs-2022}",
  note = {Accessed: 2023-10-10}
}

@online{microsoft2023testgen,
  title = {Test generation - Visual Studio (Windows)},
  author = {{Microsoft}},
  year = {2023},
  month = {3},
  day = {10},
  url = {https://learn.microsoft.com/en-us/visualstudio/test/intellitest-manual/test-generation?view=vs-2022},
  note = {Accessed: 2023-10-10},
  urldate = {2023-10-10},
  howpublished = {\url{https://learn.microsoft.com/en-us/visualstudio/test/intellitest-manual/test-generation?view=vs-2022}},
  description = {Learn how IntelliTest generates test cases from methods of your implementation, then generates inputs for the methods and check assertions over the data.}
}

@misc{parizek_symbolic_execution,
  author = {Parízek, Pavel},
  title = {Symbolic Execution},
  howpublished = {Online},
  note = {Lecture notes for Program Analysis and Verification course},
  url = {https://d3s.mff.cuni.cz/legacy/teaching/program_analysis_verification/files/lecture03.pdf},
  url = "\url{https://d3s.mff.cuni.cz/legacy/teaching/program_analysis_verification/files/lecture03.pdf}",
}

% Dosavadní práce

@article{schafer2023empirical,
  title={An Empirical Evaluation of Using Large Language Models for Automated Unit Test Generation},
  author={Schäfer, Max and Nadi, Sarah and Eghbali, Aryaz and Tip, Frank},
  journal={arXiv preprint arXiv:2302.06527},
  year={2023},
  url={https://arxiv.org/pdf/2302.06527.pdf}
}

@article{StarCoder2023,
  title={StarCoder: may the source be with you!},
  author={Raymond Li and Loubna Ben Allal and Yangtian Zi and Niklas Muennighoff and Denis Kocetkov and others},
  journal={arXiv preprint arXiv:2305.06161},
  year={2023}
}

@article{siddiq2023exploring,
  title={Exploring the Effectiveness of Large Language Models in Generating Unit Tests},
  author={Siddiq, Mohammed Latif and Santos, Joanna C. S. and Tanvir, Ridwanul Hasan and Ulfat, Noshin and Rifat, Fahmid Al and Lopes, Vinicius Carvalho},
  journal={arXiv preprint arXiv:2305.00418},
  year={2023}
}

@online{testsmells,
  title = {Test Smells},
  year = {2021},
  url = {https://testsmells.org/pages/testsmells.html},
  howpublished = "\url{https://testsmells.org/pages/testsmells.html}",
  note = {Čteno: 23.10.2023}
}

@misc{BigCode2023,
  author = {BigCode Project},
  title = {CodeML OpenRAIL-M 0.1 License},
  year = {2023},
  url = {https://www.bigcode-project.org/docs/pages/model-license/},
  url = "\url{https://www.bigcode-project.org/docs/pages/model-license/}",
  note = {Čteno: 23.10.2023}
}
